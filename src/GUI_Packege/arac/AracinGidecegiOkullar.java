/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_Packege.arac;

import GUI_Packege.ogrenci.OgrenciKayit;
import StudentServiceClass.DbConnection;
import StudentServiceClass.SadeceSayilar;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author Administrator
 */
public class AracinGidecegiOkullar extends javax.swing.JInternalFrame {
DbConnection databs;
public Object ID;
SadeceSayilar sayi=new SadeceSayilar();
    /**
     * Creates new form Ogrenci_Kayit
     * @param databs
     */
    public AracinGidecegiOkullar(DbConnection databs) {
       this.databs=databs; 
        initComponents();
        setLocation(getWidth()/2,getHeight()/10);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        SERVIS = new javax.swing.JComboBox();
        Arac_Okul_Kaydet = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OKULLAR_TABLO = new javax.swing.JTable();
        OKUL = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        arac_okul_sil = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Araçların Okullara Dağıtımı");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName(""); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Aracın Gideceği Okullar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        SERVIS.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SERVISİtemStateChanged(evt);
            }
        });

        Arac_Okul_Kaydet.setText("Kaydet");
        Arac_Okul_Kaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Arac_Okul_KaydetActionPerformed(evt);
            }
        });

        jLabel5.setText("PLAKA");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("OKULLAR");

        OKULLAR_TABLO.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    jScrollPane1.setViewportView(OKULLAR_TABLO);

    OKUL.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            OKULMouseClicked(evt);
        }
    });

    jLabel7.setText("OKUL");

    arac_okul_sil.setText("Kayıt Sil");
    arac_okul_sil.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            arac_okul_silActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane1)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel6)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel5)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(SERVIS, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(28, 28, 28)
                    .addComponent(jLabel7)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(OKUL, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(18, 18, 18)
            .addComponent(Arac_Okul_Kaydet)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(arac_okul_sil)
            .addContainerGap(21, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(SERVIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(Arac_Okul_Kaydet)
                .addComponent(OKUL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel7)
                .addComponent(arac_okul_sil))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel6)
            .addGap(0, 0, 0)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents
    private void Arac_Okul_KaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Arac_Okul_KaydetActionPerformed
        int SER_id=SecilenSERVIS();
        int OK_id=SecilenOKUL();
String addRow = "INSERT"
        + " INTO"
        + " arac_okul"
        + " ("
        + " ARAC_ID,"
        + " OKUL_ID,"
        + " IPTAL"
        + ")"
        + "VALUES"
        + "('"+SER_id+"',"
        + "'"+OK_id+"',"
        + "0"
        + ")";
    try {
            databs.openDatabase();
            databs.sttmnt.execute(addRow);
            JOptionPane.showMessageDialog(null,"Kayit Yapıldı.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
            Logger.getLogger(DbConnection.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
        databs.closeDatabase();
            }
Gidilen_Okul_Tablo();
    }//GEN-LAST:event_Arac_Okul_KaydetActionPerformed
    private void SERVISİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SERVISİtemStateChanged
        Gidilen_Okul_Tablo();        // TODO add your handling code here:
    }//GEN-LAST:event_SERVISİtemStateChanged
    private void OKULMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OKULMouseClicked
       Okul_Cagir();   // TODO add your handling code here:
    }//GEN-LAST:event_OKULMouseClicked
    private void arac_okul_silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arac_okul_silActionPerformed
        delete();        // TODO add your handling code here:
    }//GEN-LAST:event_arac_okul_silActionPerformed
public void Gidilen_Okul_Tablo(){        
         String firTable = "SELECT "
                 + "AO.ID,"
                 + "CONCAT(p.ADI,' ',p.SOYADI) AS PERSONEL,\n"
                 + "A.PLAKA,"
                 + "O.ID AS OKUL_ID,"
                 + "O.OKUL_ADI "
                 + "FROM "
                 + "arac A,"
                 + "personel p,"
                 + "arac_okul AO,"
                 + "okul O "
                 + "WHERE "
                 + "AO.ARAC_ID = A.ID "
                 + "AND p.ID = A.PERSONEL_ID "
                 + "AND AO.OKUL_ID = O.ID "
                 + "AND A.PLAKA = '"+SERVIS.getSelectedItem()+"' "
                 + "AND AO.IPTAL = 0";
    try {
        databs.openDatabase();
        databs.sttmnt.execute(firTable);
         ResultSet rs = databs.sttmnt.getResultSet();
         OKULLAR_TABLO.setModel(DbUtils.resultSetToTableModel(rs));
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();
    }
}
public void Servis_Cagir(){
          LinkedHashSet<String> arraylist2=new LinkedHashSet<>(); 
         
            String firTable = "SELECT"
                    + " PLAKA"
                    + " FROM"
                    + " arac"
                    + " WHERE"
                    + " IPTAL = 0";
    try {
        databs.openDatabase();
        databs.sttmnt.execute(firTable);
         ResultSet rs = databs.sttmnt.getResultSet();
            while((rs!=null) && (rs.next()))
            {
             arraylist2.add(rs.getString("PLAKA"));            
            }
            Iterator i=arraylist2.iterator();
          SERVIS.removeAllItems();
            while(i.hasNext()){
           SERVIS.addItem((Object)i.next());
             } 
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();
    }
}
public void Okul_Cagir(){
       LinkedHashSet<String> arraylist2=new LinkedHashSet<>(); 
       String firTable = "SELECT"
               + " OKUL_ADI"
               + " FROM okul"
               + " WHERE"
               + " IPTAL = 0";
    try {
        databs.openDatabase();
        databs.sttmnt.execute(firTable);
        ResultSet rs = databs.sttmnt.getResultSet();
            while((rs!=null) && (rs.next()))
            {
             arraylist2.add(rs.getString("OKUL_ADI"));            
            }
            Iterator i=arraylist2.iterator();
            OKUL.removeAllItems();
            while(i.hasNext())
            {
             OKUL.addItem((Object)i.next());
            } 
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();}
}
Integer SecilenSERVIS()
{    int id = 0;
    
        String firTable = "SELECT"
                + " ID"
                + " FROM"
                + " arac"
                + " WHERE"
                + " PLAKA='"+SERVIS.getSelectedItem()+"' AND"
                + " IPTAL = 0";
    try {
        databs.openDatabase();
        databs.sttmnt.execute(firTable);
         ResultSet rs = databs.sttmnt.getResultSet();
            while((rs!=null) && (rs.next()))
            {
                id = Integer.valueOf(rs.getString("ID"));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();
    }
   return id;
}
Integer SecilenOKUL()
{    int id = 0;
    
        String firTable = "SELECT"
                + " ID"
                + " FROM"
                + " okul"
                + " WHERE"
                + " OKUL_ADI='"+OKUL.getSelectedItem()+"' AND"
                + " IPTAL = 0";
    try {
        databs.openDatabase();
        databs.sttmnt.execute(firTable);
         ResultSet rs = databs.sttmnt.getResultSet();
            while((rs!=null) && (rs.next()))
            {
                id = Integer.valueOf(rs.getString("ID"));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();}
   return id;
}

private void delete(){
    
     if(OKULLAR_TABLO.getSelectedRow()!=-1){
     int result = JOptionPane.showOptionDialog(null, 
     String.valueOf(OKULLAR_TABLO.getModel().getValueAt(OKULLAR_TABLO.getSelectedRow(),0))+" NOLU KAYDI SİLMEK istediğinize eminmisiniz.", 
     "Uyarı!!!", 
     JOptionPane.OK_CANCEL_OPTION, 
     JOptionPane.WARNING_MESSAGE, 
     null, 
     new String[]{"EVET", "HAYIR"},
        "default");
     if(result==JOptionPane.OK_OPTION)
     {
databs.openDatabase();   
String firTable = "delete"
        + " from"
        + " arac_okul"
        + " WHERE"
        + " ID='"+OKULLAR_TABLO.getModel().getValueAt(OKULLAR_TABLO.getSelectedRow(),0)+"'";
    try {
        databs.openDatabase();
        databs.sttmnt.execute(firTable);
        JOptionPane.showMessageDialog(null,"Kayit Silindi.");
        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();}
     }
  }else{
  JOptionPane.showMessageDialog(rootPane," Lütfen Silmek İstediğiniz Aracı Seçiniz.");
  }
     Gidilen_Okul_Tablo();
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Arac_Okul_Kaydet;
    private javax.swing.JComboBox OKUL;
    private javax.swing.JTable OKULLAR_TABLO;
    private javax.swing.JComboBox SERVIS;
    private javax.swing.JButton arac_okul_sil;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
