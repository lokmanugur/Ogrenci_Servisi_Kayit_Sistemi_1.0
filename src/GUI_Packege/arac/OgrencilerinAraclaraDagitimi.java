/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_Packege.arac;

import GUI_Packege.ogrenci.OgrenciKayit;
import StudentServiceClass.DbConnection;
import StudentServiceClass.SadeceSayilar;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author Administrator
 */
public class OgrencilerinAraclaraDagitimi extends javax.swing.JInternalFrame {
DbConnection databs;
SadeceSayilar sayi=new SadeceSayilar();
SadeceSayilar sayicontrol=new SadeceSayilar();
    /**
     * Creates new form Ogrenci_Kayit
     * @param databs
     */
    public OgrencilerinAraclaraDagitimi(DbConnection databs) {
       this.databs=databs; 
        initComponents();
        setLocation(getWidth()/2,getHeight()/10);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        OKUL = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        KAYITSIZ_TABLO = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        KAYITLI_TABLO = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        surucu_adi_soyadi = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ogrenci_sayisi = new javax.swing.JLabel();
        ServiseEkle = new javax.swing.JButton();
        servistenCikar = new javax.swing.JButton();
        ARAC_SERVIS = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        ID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ADI = new javax.swing.JTextField();
        SOYADI = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ADRES = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        countstd = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Okulların Araçlara Göre Dağılımı Yapılan Öğrenci Listeleri");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName(""); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Okullara Dağıtılmış Olan Araçlar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        OKUL.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OKULİtemStateChanged(evt);
            }
        });

        jLabel7.setText("OKUL:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Araca Kaydı Yapılmamış Öğrenciler"));

        KAYITSIZ_TABLO.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        KAYITSIZ_TABLO.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    jScrollPane2.setViewportView(KAYITSIZ_TABLO);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane2)
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
    );

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Araca Kaydı Yapılmış Öğrenci"));

    KAYITLI_TABLO.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {

        }
    )
    {public boolean isCellEditable(int row, int column){return false;}}
    );
    KAYITLI_TABLO.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jScrollPane1.setViewportView(KAYITLI_TABLO);
    KAYITLI_TABLO.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    KAYITLI_TABLO.getAccessibleContext().setAccessibleName("");
    KAYITLI_TABLO.getAccessibleContext().setAccessibleDescription("");

    jLabel1.setText("SÜRÜCÜ:");

    surucu_adi_soyadi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

    jLabel3.setText("ÖĞRENCİ SAYISI:");

    ogrenci_sayisi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

    ServiseEkle.setText("Ekle");
    ServiseEkle.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ServiseEkleActionPerformed(evt);
        }
    });

    servistenCikar.setText("Çıkar");
    servistenCikar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            servistenCikarActionPerformed(evt);
        }
    });

    ARAC_SERVIS.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            ARAC_SERVISİtemStateChanged(evt);
        }
    });

    jLabel5.setText("PLAKA:");

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(surucu_adi_soyadi, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(ogrenci_sayisi, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ServiseEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(servistenCikar)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel5)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(ARAC_SERVIS, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addGap(1, 1, 1)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addComponent(surucu_adi_soyadi, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(1, 1, 1)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(ogrenci_sayisi, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ServiseEkle)
                    .addComponent(servistenCikar)
                    .addComponent(ARAC_SERVIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)))
            .addGap(1, 1, 1)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
    );

    ID.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            IDKeyReleased(evt);
        }
    });

    jLabel6.setText("ID");

    jLabel4.setText("SOYADI");

    jLabel8.setText("ADRES");

    jLabel2.setText("ADI");

    jButton1.setText("ARA");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel7)
            .addGap(8, 8, 8)
            .addComponent(OKUL, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(30, 30, 30)
            .addComponent(countstd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(36, 36, 36)
            .addComponent(jLabel6)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(ADI, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(SOYADI, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel8)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(ADRES, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jButton1)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(OKUL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ADI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(SOYADI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ADRES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jButton1))
                .addComponent(countstd, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, 0)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    getAccessibleContext().setAccessibleName("");
    getAccessibleContext().setAccessibleDescription("");

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ARAC_SERVISİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ARAC_SERVISİtemStateChanged
        Servis_Dagitilan_Ogrenci();
        servisPersoneli();
        studentCount();
    }//GEN-LAST:event_ARAC_SERVISİtemStateChanged

    private void OKULİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OKULİtemStateChanged
       Servis_Dagitilmayan_Ogrenci();
       Servis_CagirG();
       Servis_Dagitilan_Ogrenci();
       servisPersoneli();
       studentCountNotAdd();
    }//GEN-LAST:event_OKULİtemStateChanged

    private void ServiseEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ServiseEkleActionPerformed
        if(KAYITSIZ_TABLO.getSelectedRow()==-1){
        JOptionPane.showMessageDialog(rootPane, "Lütfen Servise Eklemek İstediğiniz Öğrenciyi Seçiniz.");
        }else{
        serviseEkle();
        Servis_Dagitilmayan_Ogrenci();
        Servis_Dagitilan_Ogrenci();
        studentCount();
        studentCountNotAdd();}
    }//GEN-LAST:event_ServiseEkleActionPerformed

    private void servistenCikarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servistenCikarActionPerformed
        if(KAYITLI_TABLO.getSelectedRow()==-1){
        JOptionPane.showMessageDialog(rootPane, "Lütfen Servisten Çıkarmak İstediğiniz Öğrenciyi Seçiniz.");
        }else{
        servistenCikar();
        Servis_Dagitilmayan_Ogrenci();
        Servis_Dagitilan_Ogrenci();
        studentCount();
        studentCountNotAdd();}
    }//GEN-LAST:event_servistenCikarActionPerformed

    private void IDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IDKeyReleased
        sayicontrol.numberInteger(evt.getKeyChar(), ID);
    }//GEN-LAST:event_IDKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Servis_Dagitilmayan_Ogrenci();
        studentCountNotAdd();
    }//GEN-LAST:event_jButton1ActionPerformed
  void serviseEkle(){
       int SER_id=SecilenSERVIS();         
 String UpDate="UPDATE ogrenci SET "
        + "ARAC_ID='"+SER_id+"'"
        + " WHERE ID="+(KAYITSIZ_TABLO.getModel().getValueAt(KAYITSIZ_TABLO.getSelectedRow(),0))+"";
            try {
                databs.openDatabase();
                databs.sttmnt.executeUpdate(UpDate);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
                Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
            databs.closeDatabase();
            }
} 
   void servistenCikar(){         
 String UpDate="UPDATE ogrenci SET "
        + "ARAC_ID=0"
        + " WHERE ID="+(KAYITLI_TABLO.getModel().getValueAt(KAYITLI_TABLO.getSelectedRow(),0))+"";
            try {
                databs.openDatabase();
                databs.sttmnt.executeUpdate(UpDate);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
                Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
            databs.closeDatabase();
            }
}    
    private void Servis_Dagitilmayan_Ogrenci(){ 
        int idokul=SecilenOKUL();
        int idserv=0;
         String firTable = "SELECT "
                 + " o.ID,"
                 + " o.ADI,"
                 + " o.SOYADI,"
                 + " o.VELI_ADI,"
                 + " o.VELI_GSM,"
                 + " o.SINIF,"
                 + " o.ADRES"
                 + " FROM"
                 + " ogrenci o"
                 + " WHERE "
                 + " o.ARAC_ID = '"+idserv+"' AND"
                 + " o.OKUL_ID = '"+idokul+"' AND"
                 + " o.IPTAL = 0";
                if(!ID.getText().equals(""))
                {
                firTable+=" AND o.ID LIKE "+ID.getText()+"";
                }
                if(!ADI.getText().equals(""))
                {
                firTable+=" AND o.ADI LIKE '"+ADI.getText()+"%'";
                }
                if(!SOYADI.getText().equals(""))
                {
                firTable+=" AND o.SOYADI LIKE '"+SOYADI.getText()+"%'";
                }
                if(!ADRES.getText().equals(""))
                {
                firTable+=" AND o.ADRES LIKE '"+ADRES.getText()+"%'";
                }
                firTable+=" order by o.ADI";
    try {
        databs.openDatabase();
        databs.sttmnt.execute(firTable);
         ResultSet rs = databs.sttmnt.getResultSet();
         KAYITSIZ_TABLO.setModel(DbUtils.resultSetToTableModel(rs));
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();
    }
}
private void Servis_Dagitilan_Ogrenci(){
         String firTable = "SELECT "
                 + " o.ID,"
                 + " o.ADI,"
                 + " o.SOYADI,"
                 + " o.SINIF,"
                 + " o.ADRES"
                 + " FROM"
                 + " ogrenci o,"
                 + " arac a,"
                 + " okul ok"
                 + " WHERE"
                 + " o.ARAC_ID = a.ID AND"
                 + " o.OKUL_ID = ok.ID AND"
                 + " ok.OKUL_ADI ='"+OKUL.getSelectedItem()+"' AND"
                 + " a.PLAKA ='"+ARAC_SERVIS.getSelectedItem()+"' AND"
                 + " o.IPTAL = 0 ORDER BY o.ADI";
    try {
        databs.openDatabase();
        databs.sttmnt.execute(firTable);
         ResultSet rs = databs.sttmnt.getResultSet();
         KAYITLI_TABLO.setModel(DbUtils.resultSetToTableModel(rs));
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();
    }
}
public void Okul_CagirG(){
         LinkedHashSet<String> arraylist=new LinkedHashSet<>();   
         String firTable = "SELECT"
                 + " OKUL_ADI"
                 + " FROM okul"
                 + " WHERE"
                 + " IPTAL = 0";
    try {
        databs.openDatabase();
        databs.sttmnt.executeQuery(firTable);
         ResultSet rs = databs.sttmnt.getResultSet();
            while((rs!=null) && (rs.next()))
            {
             arraylist.add(rs.getString("OKUL_ADI"));            
            }
            Iterator i=arraylist.iterator();
            OKUL.removeAllItems();
            while(i.hasNext())
            {
              OKUL.addItem((Object)i.next());
            } 
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();}
    Servis_CagirG();
}
public void Servis_CagirG(){
       LinkedHashSet<String> arraylist4=new LinkedHashSet<>(); 
       String firTable = "SELECT "
               + "a.PLAKA"
               + " FROM"
               + " arac a,"
               + " okul o,"
               + " arac_okul ao"
               + " WHERE o.ID=ao.OKUL_ID and"
               + " ao.ARAC_ID=a.ID and"
               + " o.OKUL_ADI='"+OKUL.getSelectedItem()+"' and"
               + " a.IPTAL = 0";
    try {
        databs.openDatabase();
        databs.sttmnt.executeQuery(firTable);
         ResultSet rs = databs.sttmnt.getResultSet();
            while((rs!=null) && (rs.next()))
            {
             arraylist4.add(rs.getString("PLAKA"));            
            }
            Iterator i=arraylist4.iterator();
          ARAC_SERVIS.removeAllItems();
            while(i.hasNext()){
           ARAC_SERVIS.addItem((Object)i.next());
             }
            studentCount();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();}
}
private Integer SecilenSERVIS()
{    int id = 0;
        String firTable = "SELECT"
                + " ID"
                + " FROM"
                + " arac"
                + " WHERE"
                + " PLAKA='"+ARAC_SERVIS.getSelectedItem()+"' AND"
                + " IPTAL = 0 ";

    try {
        databs.openDatabase();
        databs.sttmnt.execute(firTable);
         ResultSet rs = databs.sttmnt.getResultSet();
            while((rs!=null) && (rs.next()))
            {
                id = Integer.valueOf(rs.getString("ID"));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();
    }
   return id;
}
private Integer SecilenOKUL()
{    int id = 0;
        String firTable = "SELECT"
                + " ID"
                + " FROM"
                + " okul"
                + " WHERE"
                + " OKUL_ADI='"+OKUL.getSelectedItem()+"' AND"
                + " IPTAL = 0";
    try {
        databs.openDatabase();
        databs.sttmnt.execute(firTable);
         ResultSet rs = databs.sttmnt.getResultSet();
            while((rs!=null) && (rs.next()))
            {
                id = Integer.valueOf(rs.getString("ID"));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();}
   return id;   
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ADI;
    private javax.swing.JTextField ADRES;
    private javax.swing.JComboBox ARAC_SERVIS;
    private javax.swing.JTextField ID;
    private javax.swing.JTable KAYITLI_TABLO;
    private javax.swing.JTable KAYITSIZ_TABLO;
    private javax.swing.JComboBox OKUL;
    private javax.swing.JTextField SOYADI;
    private javax.swing.JButton ServiseEkle;
    private javax.swing.JLabel countstd;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel ogrenci_sayisi;
    private javax.swing.JButton servistenCikar;
    private javax.swing.JLabel surucu_adi_soyadi;
    // End of variables declaration//GEN-END:variables
// private void studentCount(){
// String count="select "
//         + " count(distinct o.ID)"
//         + " from"
//         + " ogrenci o,"
//         + " arac a"
//         + " where a.ID=o.ARAC_ID and"
//         + " a.PLAKA='"+ARAC_SERVIS.getSelectedItem()+"' and"
//         + " o.IPTAL=0;";
//     try {
//         databs.openDatabase();
//         databs.sttmnt.executeQuery(count);
//         ResultSet rs = databs.sttmnt.getResultSet();
//         while ((rs != null) && (rs.next())) 
//         {
//             ogrenci_sayisi.setText(rs.getString(1));             
//         }
//     }catch (SQLException ex) {
//         JOptionPane.showMessageDialog(null, ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
//         Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
//     } finally 
//        {
//         databs.closeDatabase();
//        }
//    }
  private void studentCount(){
 String count="select"
         + " count(distinct o.ID)"
         + " from"
         + " ogrenci o,"
         + " arac a,"
         + " okul ok"
         + " where"
         + " o.ARAC_ID = a.ID AND"
         + " o.OKUL_ID = ok.ID AND"
         + " ok.OKUL_ADI ='"+OKUL.getSelectedItem()+"' AND"
         + " a.PLAKA ='"+ARAC_SERVIS.getSelectedItem()+"' AND"
         + " o.IPTAL=0;";
     try {
         databs.openDatabase();
         databs.sttmnt.executeQuery(count);
         ResultSet rs = databs.sttmnt.getResultSet();
         while ((rs != null) && (rs.next())) 
         {
             ogrenci_sayisi.setText(rs.getString(1));             
         }
     }catch (SQLException ex) {
         JOptionPane.showMessageDialog(null, ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
         Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
     } finally 
        {
         databs.closeDatabase();
        }
    }
  private void servisPersoneli(){
 String count="select"
         + " CONCAT(p.ADI,' ',p.SOYADI) AS PERSONEL"
         + " from"
         + " personel p,"
         + " arac a"
         + " where a.PERSONEL_ID=p.ID and"
         + " a.PLAKA='"+ARAC_SERVIS.getSelectedItem()+"' and"
         + " p.IPTAL=0;";
     try {
         databs.openDatabase();
         databs.sttmnt.executeQuery(count);
         ResultSet rs = databs.sttmnt.getResultSet();
         while ((rs != null) && (rs.next())) 
         {
            surucu_adi_soyadi.setText(rs.getString(1));             
         }
     }catch (SQLException ex) {
         JOptionPane.showMessageDialog(null, ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
         Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
     } finally 
        {
         databs.closeDatabase();
        }
    }
 public void studentCountNotAdd(){
        int idokul=SecilenOKUL();
        int idserv = 0;
 String firTable="select "
         + " count(o.ID)"
         + " from"
         + " ogrenci o,"
         + " okul ok"
         + " where"
         + " o.OKUL_ID = ok.ID AND"
         + " o.OKUL_ID='"+idokul+"' AND"
         + " o.ARAC_ID='"+idserv+"' AND"
         + " o.IPTAL=0";
                 if(!ID.getText().equals(""))
                {
                firTable+=" AND o.ID LIKE "+ID.getText()+"";
                }
                if(!ADI.getText().equals(""))
                {
                firTable+=" AND o.ADI LIKE '"+ADI.getText()+"%'";
                }
                if(!SOYADI.getText().equals(""))
                {
                firTable+=" AND o.SOYADI LIKE '"+SOYADI.getText()+"%'";
                }
                if(!ADRES.getText().equals(""))
                {
                firTable+=" AND o.ADRES LIKE '"+ADRES.getText()+"%'";
                }
                firTable+=" order by o.ADI";
     try {
         databs.openDatabase();
         databs.sttmnt.executeQuery(firTable);
         ResultSet rs = databs.sttmnt.getResultSet();
         while ((rs != null) && (rs.next())) 
         {
             countstd.setText(rs.getString(1));             
         }
     }catch (SQLException ex) {
         JOptionPane.showMessageDialog(null, ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
         Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
     } finally 
        {
         databs.closeDatabase();
        }
    }
}
