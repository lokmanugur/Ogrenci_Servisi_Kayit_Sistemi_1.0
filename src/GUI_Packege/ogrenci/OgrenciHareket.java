package GUI_Packege.ogrenci;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import GUI_Packege.Main_Frame;
import StudentServiceClass.ReinstalData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import StudentServiceClass.DbConnection;
import StudentServiceClass.SadeceSayilar;
import StudentServiceClass.TableToExcel;
import StudentServiceClass.jxDate;
import java.beans.PropertyVetoException;
import java.io.File;
import java.util.Iterator;
import java.util.LinkedHashSet;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author zehirugur
 */
public class OgrenciHareket extends javax.swing.JInternalFrame {
ReinstalData rid=new ReinstalData();
DbConnection databs;
OgrenciKayit ogrenciKayit;
OdemeBilgisiOlustur internalF2;
SadeceSayilar sayicontrol=new SadeceSayilar();
jxDate dat=new jxDate();
/**
     * Creates new form Ogrenci_Hareket
     * 
     * @param ok
     * @param to
     * @param databs
     */
    public OgrenciHareket(OgrenciKayit ok,OdemeBilgisiOlustur to,DbConnection databs) {
 this.databs=databs;
    initComponents();
        setLocation(getWidth()/10,getHeight()/10);
       ogrenciKayit=ok;
       internalF2=to;
       buttonGroup1.add(jCheckBox1);
       buttonGroup1.add(jCheckBox2);
       buttonGroup1.add(jCheckBox3);
    }
public void getKayit()
{
databs.openDatabase();
String firTable = "SELECT \n" +
"  O.ID,\n" +
"  DATE_FORMAT(O.KAYIT_TARIH,'%d-%m-%Y')as KAYIT_TARİHİ,\n" +
"  O.ADI,\n" +
"  O.SOYADI,\n" +
"  O.BABA_ADI,\n" +
"  O.SINIF,\n" +
"  O.ADRES,\n" +
"  O.VELI_ADI,\n" +
"  O.VELI_SOYADI,\n" +
"  CONCAT(P.ADI,' ',P.SOYADI) AS PERSONEL,\n" +
"  P.TELEFON,\n" +
"  OK.OKUL_ADI,\n" +
"  O.VELI_GSM,\n" +
"  O.VELI_EV_TLF,\n" +
"  O.IS_ADRES\n" +
"FROM \n" +
"  ogrenci O,\n" +
"  okul OK,\n" +
"  personel P,\n" +
"  arac A\n" +
"WHERE \n" +
"  O.OKUL_ID=OK.ID AND \n" +
"  O.ARAC_ID=A.ID AND \n" +
"  A.PERSONEL_ID=P.ID";
if(iptal_check.isSelected()==true){
firTable+=" AND O.IPTAL = 1";
}
if(iptal_check.isSelected()==false){
firTable+=" AND O.IPTAL = 0";
}
if(!ID.getText().equals(""))
{
firTable+=" AND O.ID LIKE "+ID.getText()+"";
}
if(!ADI.getText().equals(""))
{
firTable+=" AND O.ADI LIKE '"+ADI.getText()+"%'";
}
if(!SOYADI.getText().equals(""))
{
firTable+=" AND O.SOYADI LIKE '"+SOYADI.getText()+"%'";
}
if(!VELI_ADI.getText().equals(""))
{
firTable+=" AND O.VELI_ADI LIKE '"+VELI_ADI.getText()+"%'";
}
if(!OKUL.getEditor().equals(""))
{
firTable+=" AND OK.OKUL_ADI LIKE '"+OKUL.getSelectedItem()+"%'";
}
if(!SINIF.getEditor().equals(""))
{
firTable+=" AND O.SINIF LIKE '"+SINIF.getSelectedItem()+"%'";
}
if(jCheckBox1.isSelected()==true)
{
firTable+=" ORDER BY O.ADI";
}
if(jCheckBox2.isSelected()==true)
{
firTable+=" ORDER BY O.ADRES";
}
if(jCheckBox3.isSelected()==true)
{
firTable+=" ORDER BY O.ID";
}

    try {        
        databs.sttmnt.execute(firTable);
        ResultSet rs = databs.sttmnt.getResultSet();
        OGRENCI_TABLO.setModel(DbUtils.resultSetToTableModel(rs));  
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciHareket.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();}
}
 /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        GUNCELLE = new javax.swing.JButton();
        SIL = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        ID = new javax.swing.JTextField();
        VELI_ADI = new javax.swing.JTextField();
        ADI = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        SOYADI = new javax.swing.JTextField();
        ARA = new javax.swing.JButton();
        iptal_check = new javax.swing.JCheckBox();
        OKUL = new javax.swing.JComboBox();
        SINIF = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        count = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        Exel_Yaz = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        olustur = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        OGRENCI_TABLO = new javax.swing.JTable();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Öğrenci Hareket");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Güncelleme", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        GUNCELLE.setText("Güncelle");
        GUNCELLE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUNCELLEActionPerformed(evt);
            }
        });

        SIL.setText("Sil");
        SIL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SILActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SIL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GUNCELLE, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GUNCELLE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SIL)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Ara", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        ID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                IDKeyReleased(evt);
            }
        });

        VELI_ADI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                VELI_ADIKeyReleased(evt);
            }
        });

        ADI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ADIKeyReleased(evt);
            }
        });

        jLabel5.setText("ID");

        jLabel1.setText("VELİ ADI");

        jLabel2.setText("ADI");

        jLabel3.setText("OKULU");

        jLabel4.setText("SOYADI");

        SOYADI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SOYADIKeyReleased(evt);
            }
        });

        ARA.setText("Ara");
        ARA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ARAActionPerformed(evt);
            }
        });

        iptal_check.setText("İPTAL");
        iptal_check.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iptal_check.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        iptal_check.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iptal_checkMouseClicked(evt);
            }
        });

        OKUL.setEditable(true);
        OKUL.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        OKUL.setDoubleBuffered(true);

        SINIF.setEditable(true);
        SINIF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ANAOKUL", "İLKÖĞRETİM 1", "İLKÖĞRETİM 2", "İLKÖĞRETİM 3", "İLKÖĞRETİM 4", "İLKÖĞRETİM 5", "İLKÖĞRETİM 6", "İLKÖĞRETİM 7", "İLKÖĞRETİM 8", "LİSE 1", "LİSE 2", "LİSE 3", "LİSE 4" }));

        jLabel6.setText("SINIF");

        jLabel7.setText("ÖĞRENCİ SAYISI:");

        count.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        count.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jCheckBox2.setText("ADRES");

        jCheckBox1.setText("AD");

        jLabel8.setText("SIRALA:");

        jCheckBox3.setText("ID");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(VELI_ADI, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(ID, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(iptal_check)
                        .addGap(25, 25, 25)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ADI)
                            .addComponent(SOYADI))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(OKUL, 0, 214, Short.MAX_VALUE)
                        .addComponent(SINIF, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(ARA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(ADI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(OKUL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VELI_ADI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(SOYADI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(SINIF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ARA, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(count, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(iptal_check, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox1)
                        .addComponent(jCheckBox2)
                        .addComponent(jLabel8)
                        .addComponent(jCheckBox3)))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Çıktı", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        Exel_Yaz.setText("Exelle Yaz");
        Exel_Yaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exel_YazActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(Exel_Yaz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Exel_Yaz)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Ödeme Planı", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        olustur.setText("Oluştur");
        olustur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                olusturActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(olustur)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(olustur)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        OGRENCI_TABLO.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    jScrollPane1.setViewportView(OGRENCI_TABLO);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GUNCELLEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUNCELLEActionPerformed
      if(-1==OGRENCI_TABLO.getSelectedRow()){
    JOptionPane.showMessageDialog(rootPane, "Lütfen Bilgilerini Değiştirmek İstediğniz Öğrenciyi Seçiniz.");
}else{
    ogrenciKayit.Okul_Cagir();
    ogrenciKayit.ogrenciGuncelle((int)OGRENCI_TABLO.getModel().getValueAt(OGRENCI_TABLO.getSelectedRow(),0));
    ogrenciKayit.Kaydet.setText("Güncelle");
    ogrenciKayit.Temizle.setText("Vazgeç");
    try {
        ogrenciKayit.show(true);
        ogrenciKayit.setSelected(true);
    } catch (PropertyVetoException ex) {
        JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciHareket.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    }//GEN-LAST:event_GUNCELLEActionPerformed

    private void SILActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SILActionPerformed
        if(iptal_check.isSelected()==true){
        getiptalSil();
        }else{
        getSil();}        // TODO add your handling code here:
    }//GEN-LAST:event_SILActionPerformed

    private void IDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IDKeyReleased
        sayicontrol.numberInteger(evt.getKeyChar(), ID);
        if(evt.getKeyCode()==10){
            getKayit();
        studentCount();}
    }//GEN-LAST:event_IDKeyReleased

    private void ARAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ARAActionPerformed
        getKayit();
        studentCount();// TODO add your handling code here:
    }//GEN-LAST:event_ARAActionPerformed

    private void iptal_checkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iptal_checkMouseClicked
        if(iptal_check.isSelected())
        olustur.setEnabled(false);
        else
        olustur.setEnabled(true);
    }//GEN-LAST:event_iptal_checkMouseClicked

    private void olusturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_olusturActionPerformed
   if(OGRENCI_TABLO.getSelectedRow()!=-1){
       internalF2.ogrenciBilgi((int)OGRENCI_TABLO.getModel().getValueAt(OGRENCI_TABLO.getSelectedRow(),0));
        internalF2.show(true);
    try {
        internalF2.setSelected(true);
    } catch (PropertyVetoException ex) {
        JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
    }  
   }else {
   JOptionPane.showMessageDialog(rootPane, "Lütfen Bir Öğrenci Seçiniz.");
   }
    }//GEN-LAST:event_olusturActionPerformed

    private void Exel_YazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exel_YazActionPerformed
   
//        List<String> str=new ArrayList<>();
//        str.add("header1");
//        str.add("header2");
//        str.add("header3");
//        str.add("header4");
        try {
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel", "xls", "xlsx");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showDialog(null,"Kaydet");
        if(returnVal == JFileChooser.APPROVE_OPTION) 
        {
         TableToExcel tte = new TableToExcel(OGRENCI_TABLO, null, "My Table");
//        tte.setCustomTitles(str);
         File myfile = new File(chooser.getSelectedFile().getPath()+".xls");
         tte.generate(myfile);
         JOptionPane.showMessageDialog(rootPane,myfile+"Veriler Excel Dosyasına Yazıldı.");
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog( null,ex.getMessage(), "Write to Excel Error. Tablo Yazdırılamadı.", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciHareket.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_Exel_YazActionPerformed

    private void ADIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ADIKeyReleased
      if(evt.getKeyCode()==10){
        getKayit();
        studentCount();
}   // TODO add your handling code here:
    }//GEN-LAST:event_ADIKeyReleased

    private void VELI_ADIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VELI_ADIKeyReleased
         if(evt.getKeyCode()==10){
        getKayit();
        studentCount(); }      // TODO add your handling code here:
    }//GEN-LAST:event_VELI_ADIKeyReleased

    private void SOYADIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SOYADIKeyReleased
        if(evt.getKeyCode()==10){
        getKayit();
        studentCount(); }      // TODO add your handling code here:
    }//GEN-LAST:event_SOYADIKeyReleased
private void getSil()
    {
  if(OGRENCI_TABLO.getSelectedRow()!=-1){
     int result = JOptionPane.showOptionDialog(null, 
     (String)OGRENCI_TABLO.getModel().getValueAt(OGRENCI_TABLO.getSelectedRow(),2)+" "+(String)OGRENCI_TABLO.getModel().getValueAt(OGRENCI_TABLO.getSelectedRow(),3)+" SİLİNECEK! SİLMEK istediğinize eminmisiniz.", 
     "Feedback", 
     JOptionPane.OK_CANCEL_OPTION, 
     JOptionPane.WARNING_MESSAGE, 
     null, 
     new String[]{"EVET", "HAYIR"},
        "default");
     if(result==JOptionPane.OK_OPTION)
     {
databs.openDatabase();   
String sqlAccess="UPDATE ogrenci SET IPTAL=1 WHERE ID="+OGRENCI_TABLO.getModel().getValueAt(OGRENCI_TABLO.getSelectedRow(),0)+"";
try
{
databs.sttmnt.executeUpdate(sqlAccess);
}catch(SQLException e)
{
    JOptionPane.showMessageDialog( null,e.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
Logger.getLogger(OgrenciHareket.class.getName()).log(Level.SEVERE, null, e);
}finally{
databs.closeDatabase();}
     }
  }else{
  JOptionPane.showMessageDialog(rootPane," Lütfen Silmek İstediğiniz Öğrenciyi Seçiniz.");
  }
  getKayit();
}
private void getiptalSil()
    {
  if(OGRENCI_TABLO.getSelectedRow()!=-1){
     int result = JOptionPane.showOptionDialog(null, 
     (String)OGRENCI_TABLO.getModel().getValueAt(OGRENCI_TABLO.getSelectedRow(),2)+" "+(String)OGRENCI_TABLO.getModel().getValueAt(OGRENCI_TABLO.getSelectedRow(),3)+" SİLİNECEK! SİLMEK istediğinize eminmisiniz.", 
     "Feedback", 
     JOptionPane.OK_CANCEL_OPTION, 
     JOptionPane.WARNING_MESSAGE, 
     null, 
     new String[]{"EVET", "HAYIR"},
        "default");
     if(result==JOptionPane.OK_OPTION)
     {
databs.openDatabase();   
String sqlAccess="delete from ogrenci WHERE IPTAL=1 and ID="+OGRENCI_TABLO.getModel().getValueAt(OGRENCI_TABLO.getSelectedRow(),0)+"";
try
{
databs.sttmnt.executeUpdate(sqlAccess);
}catch(SQLException e)
{
    JOptionPane.showMessageDialog( null,e.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
Logger.getLogger(OgrenciHareket.class.getName()).log(Level.SEVERE, null, e);
}finally{
databs.closeDatabase();}
     }
  }else{
  JOptionPane.showMessageDialog(rootPane," Lütfen Silmek İstediğiniz Öğrenciyi Seçiniz.");
  }
  getKayit();
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ADI;
    private javax.swing.JButton ARA;
    private javax.swing.JButton Exel_Yaz;
    private javax.swing.JButton GUNCELLE;
    private javax.swing.JTextField ID;
    private javax.swing.JTable OGRENCI_TABLO;
    private javax.swing.JComboBox OKUL;
    private javax.swing.JButton SIL;
    private javax.swing.JComboBox SINIF;
    private javax.swing.JTextField SOYADI;
    private javax.swing.JTextField VELI_ADI;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel count;
    private javax.swing.JCheckBox iptal_check;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton olustur;
    // End of variables declaration//GEN-END:variables
public void okulCagir(){
         LinkedHashSet<String> arraylist=new LinkedHashSet<>();   
         String firTable = "SELECT"
                 + " OKUL_ADI"
                 + " FROM"
                 + " okul"
                 + " WHERE"
                 + " IPTAL = 0";
    try {
        databs.openDatabase();
        databs.sttmnt.executeQuery(firTable);
        ResultSet rs = databs.sttmnt.getResultSet();
            while((rs!=null) && (rs.next()))
            {
              arraylist.add(rs.getString("OKUL_ADI"));            
            }
            Iterator i=arraylist.iterator();
            OKUL.removeAllItems();
            while(i.hasNext())
            {
              OKUL.addItem((Object)i.next());
            } 
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog( null,ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE );
        Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
    }finally{
    databs.closeDatabase();}
//    Servis_Cagir();
}

public void studentCount(){
 String firTable="select "
         + " count(o.ID)"
         + " from"
         + " ogrenci o,"
         + " okul ok"
         + " where"
         + " o.OKUL_ID = ok.ID";
                if(iptal_check.isSelected()==true){
               firTable+=" AND O.IPTAL = 1";
               }
               if(iptal_check.isSelected()==false){
               firTable+=" AND O.IPTAL = 0";
               }
                 if(!ID.getText().equals(""))
                {
                firTable+=" AND o.ID LIKE "+ID.getText()+"";
                }
                if(!ADI.getText().equals(""))
                {
                firTable+=" AND o.ADI LIKE '"+ADI.getText()+"%'";
                }
                if(!SOYADI.getText().equals(""))
                {
                firTable+=" AND o.SOYADI LIKE '"+SOYADI.getText()+"%'";
                }
                if(!VELI_ADI.getText().equals(""))
                {
                firTable+=" AND o.VELI_ADI LIKE '"+VELI_ADI.getText()+"%'";
                }
                if(!OKUL.getEditor().equals(""))
                {
                firTable+=" AND ok.OKUL_ADI LIKE '"+OKUL.getSelectedItem()+"%'";
                }
                if(!SINIF.getEditor().equals(""))
                {
                firTable+=" AND o.SINIF LIKE '"+SINIF.getSelectedItem()+"%'";
                }
              //  firTable+=" order by o.ADRES";
     try {
         databs.openDatabase();
         databs.sttmnt.executeQuery(firTable);
         ResultSet rs = databs.sttmnt.getResultSet();
         while ((rs != null) && (rs.next())) 
         {
             count.setText(rs.getString(1));             
         }
     }catch (SQLException ex) {
         JOptionPane.showMessageDialog(null, ex.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);
         Logger.getLogger(OgrenciKayit.class.getName()).log(Level.SEVERE, null, ex);
     } finally 
        {
         databs.closeDatabase();
        }
    }
}